<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.repository.TimelineMapper">

	<resultMap type="com.example.domain.Article" id="articleMap">
        <id column="article_id" property="articleId"></id>
        <result column="user_id" property="userId"></result>
       	<result column="content" property="content"></result>
       	<result column="article_post_date" property="articlePostDate"></result>
       	<association property="user" resultMap="userMap"></association>
       	<collection property="imageList" ofType="com.example.domain.Image">
       		<id column="image_id" property="imageId"></id>
       		<id column="i_article_id" property="articleId"></id>
       		<result column="image_path" property="imagePath"></result>
       	</collection>
       	<collection property="tagList" ofType="com.example.domain.Tag">
       		<id column="tag_id" property="tagId"></id>
       		<id column="article_id" property="articleId"/>
       		<result column="tag_name" property="tagName"></result>
       	</collection>
       	<collection property="commentList" ofType="com.example.domain.Comment">
       		<id column="comment_id" property="commentId"/>
       		<id column="c_user_id" property="userId"/>
       		<id column="article_id" property="articleId"/>
       		<result column="comment" property="comment"/>
       		<result column="c_comment_post_date" property="commentPostDate"/>
       		<association property="user" resultMap="commentUserMap"></association>
       	</collection>
       	<collection property="favoriteList" ofType="com.example.domain.Favorite">
       		<result column="favorite_id" property="favoriteId"/>
       		<result column="f_user_id" property="userId"/>
       		<result column="f_article_id" property="articleId"/>
       		<association property="user" resultMap="favoriteUserMap"></association>
       	</collection>
	</resultMap>
	
	<resultMap type="com.example.domain.User" id="userMap">
		<id column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
		<result column="u_user_image_path" property="userImagePath"/>
	</resultMap>
	
	<resultMap type="com.example.domain.User" id="commentUserMap">
		<id column="uc_user_id" property="userId"/>
		<result column="uc_user_name" property="userName"/>
		<result column="uc_user_image_path" property="userImagePath"/>
	</resultMap>
	
	<resultMap type="com.example.domain.User" id="favoriteUserMap">
		<id column="uf_user_id" property="userId"/>
		<result column="uf_user_name" property="userName"/>
		<result column="uf_user_image_path" property="userImagePath"/>
	</resultMap>
	
	
	
	<select id="findByFollowing" resultType="com.example.domain.Follow">
		select follow_id, following_id, follower_id from follows where following_id = #{followingId}
	</select>
	
	
	
	<select id="allTimeLine" resultMap="articleMap">
		select 
		a.article_id, a.user_id, a.content, a.article_post_date, 
		u.user_id, u.user_name, u.user_image_path as u_user_image_path, 
		i.image_id, i.article_id as i_article_id, i.image_path, 
		t.tag_id, t.article_id, t.tag_name, 
		f.favorite_id, f.user_id as f_user_id, f.article_id as f_article_id,  
		uf.user_id as uf_user_id, uf.user_name as uf_user_id, uf.user_image_path as uf_user_image_path, 
		c.comment_id, c.user_id as c_user_id, c.article_id, c.comment, c.comment_post_date, 
		uc.user_id as uc_user_id, uc.user_name as uc_user_name, uc.user_image_path as uc_user_image_path 
		from articles a 
		left join users u on a.user_id = u. user_id 
		left join images i on a.article_id = i.article_id 
		left join tags t on a.article_id = t.article_id 
		left join favorites f on a.article_id = f.article_id 
		left join comments c on a.article_id = c.article_id 
		left JOIN users uf on f.user_id = uf.user_id 
		left JOIN users uc on c.user_id = uc.user_id 
		where a.user_id in (
		<foreach collection="userIdList" item="userId" separator=",">
			${userId}
		</foreach>
		) order by a.article_post_date desc
	</select>
	
	<insert id="following">
		insert into follows (following_id, follower_id) values (#{followingId}, #{followerId})
	</insert>
	
	<select id="findByArticles"  resultType="com.example.domain.Article">
		select article_id from articles where user_id in (
		<foreach collection="followerIdList" item="followerId" separator=",">
			${followerId}
		</foreach>
		)
	</select>
	
	<select id="findByNotMyUser" resultMap="userMap">
		select user_id, user_name, user_image_path from users
		where user_id not in (
		<foreach collection="followerList" item="followerId" separator=",">
			${followerId}
		</foreach>
		) and user_id != #{userId}
	</select>
</mapper>